#!/usr/bin/env bats
# shellcheck disable=SC2034
# bats file_tags=op

setup_file() {
    # shellcheck source=core/helpers/common.bash
    source "$BATS_TEST_DIRNAME/../../core/helpers/common.bash"
    _setup_vars
}

# bats test_tags=cdk-op-geth,operator-fee
@test "Check L2 OP Isthmus operator fees" {
    # /// @custom:proxied true
    # /// @custom:predeploy 0x4200000000000000000000000000000000000015
    # /// @title L1Block
    # /// @notice The L1Block predeploy gives users access to information about the last known L1 block.
    # ///         Values within this contract are updated once per epoch (every L1 block) and can only be
    # ///         set by the "depositor" account, a special system address. Depositor account transactions
    # ///         are created by the protocol whenever we move to a new epoch.
    #     ...
    #     /// @notice The constant value applied to the operator fee.
    #     uint64 public operatorFeeConstant;
    #     /// @notice The scalar value applied to the operator fee.
    #     uint32 public operatorFeeScalar;

    op_l2_l1_block_addr="0x4200000000000000000000000000000000000015"

    # Call operatorFeeConstant
    run cast call --rpc-url "$l2_rpc_url" "$op_l2_l1_block_addr" \
        "operatorFeeConstant()(uint64)"
    echo "$output" >&3
    # Extract just the numeric part before any whitespace or brackets
    numeric_value=$(echo "$output" | awk '{print $1}')
    if [[ "$numeric_value" -eq 0 ]]; then
        echo "operatorFeeConstant is zero... network might not be generating sustainable revenue" >&3
    fi
    # Check if the command succeeded
    [[ "$status" -eq 0 ]]


    # Call operatorFeeScalar
    run cast call --rpc-url "$l2_rpc_url" "$op_l2_l1_block_addr" \
        "operatorFeeScalar()(uint32)"
    echo "$output" >&3
    numeric_value=$(echo "$output" | awk '{print $1}')
    echo "$numeric_value" >&3
    if [[ "$numeric_value" -eq 0 ]]; then
        echo "operatorFeeScalar is zero... network might not be generating sustainable revenue" >&3
    fi
    # Check if the command succeeded
    [[ "$status" -eq 0 ]]
}

# bats test_tags=operator-fee
@test "Check L2 OP vaults totalProcessed wei" {
    # /// @title FeeVault
    # /// @notice The FeeVault contract contains the basic logic for the various different vault contracts
    # ///         used to hold fee revenue generated by the L2 system.
    #     ...
    # /// @notice Total amount of wei processed by the contract.
    # uint256 public totalProcessed;

    op_l2_sequencer_fee_vault_addr="0x4200000000000000000000000000000000000011"
    # Call totalProcessed
    run cast call --rpc-url "$l2_rpc_url" "$op_l2_sequencer_fee_vault_addr" \
        "totalProcessed()(uint256)"
    echo "$output" >&3
    # Check if the command succeeded
    [[ "$status" -eq 0 ]]


    op_l2_base_fee_vault_addr="0x4200000000000000000000000000000000000019"
    # Call totalProcessed
    run cast call --rpc-url "$l2_rpc_url" "$op_l2_base_fee_vault_addr" \
        "totalProcessed()(uint256)"
    echo "$output" >&3
    # Check if the command succeeded
    [[ "$status" -eq 0 ]]


    op_l2_l1_fee_vault_addr="0x420000000000000000000000000000000000001A"
    # Call totalProcessed
    run cast call --rpc-url "$l2_rpc_url" "$op_l2_l1_fee_vault_addr" \
        "totalProcessed()(uint256)"
    echo "$output" >&3
    # Check if the command succeeded
    [[ "$status" -eq 0 ]]
}