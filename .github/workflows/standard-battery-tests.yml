name: Standard Battery Tests

on:
  workflow_dispatch:
    inputs:
      agglayer-e2e-ref:
        description: "agglayer/e2e repo ref (commit hash)"
        default: "main"
        required: true
        type: string
      kurtosis-cdk-ref:
        description: "kurtosis-cdk repo ref (commit hash)"
        default: "main"
        required: true
        type: string
      kurtosis-enclave-name:
        description: "name of the kurtosis enclave to use"
        default: "cdk"
        required: false
        type: string
      default-l2-client:
        description: "name of the l2 cdk client"
        default: "cdk-op-geth"
        required: true
        type: choice
        options:
          - cdk-op-geth
          - cdk-erigon

  pull_request:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  run-standard-battery-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    env:
      POLYCLI_VERSION: v0.1.83
    #   AGGLAYER_E2E_REF: ${{ inputs.agglayer-e2e-ref }}
    #   KURTOSIS_CDK_REF: ${{ inputs.kurtosis-cdk-ref }}
    #   KURTOSIS_ENCLAVE_NAME: ${{ inputs.kurtosis-enclave-name }}
    #   DEFAULT_L2_CLIENT: ${{ inputs.default-l2-client }}
      AGGLAYER_E2E_REF: 88668ea89c273e583e9816e55ee0aa37c22e47d3
      KURTOSIS_CDK_REF: main
      KURTOSIS_ENCLAVE_NAME: cdk
      DEFAULT_L2_CLIENT: cdk-op-geth
    steps:
      - name: Checkout agglayer-e2e
        uses: actions/checkout@v4
        with:
            repository: agglayer/e2e
            ref: ${{ env.AGGLAYER_E2E_REF }}
            path: agglayer-e2e

      - name: Checkout kurtosis-cdk
        uses: actions/checkout@v4
        with:
            repository: 0xPolygon/kurtosis-cdk
            ref: ${{ env.KURTOSIS_CDK_REF }}
            path: kurtosis-cdk

      - name: Install polycli
        run: |
            polycli_version="${{ env.POLYCLI_VERSION }}"
            pushd $(mktemp -d) || exit 1
            curl -s -L "https://github.com/0xPolygon/polygon-cli/releases/download/${polycli_version}/polycli_${polycli_version}_linux_amd64.tar.gz" > polycli.tar.gz
            tar xf polycli.tar.gz
            mv polycli_* /usr/local/bin/polycli
            polycli version
            popd

      - name: Install bats
        uses: bats-core/bats-action@3.0.0

      - name: Install Kurtosis CLI and Foundry
        uses: ./kurtosis-cdk/.github/actions/kurtosis-pre-run
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_token: ${{ secrets.DOCKER_TOKEN }}

      - name: Run Kurtosis CDK
        run: |
            pushd kurtosis-cdk || exit 1
            kurtosis run --enclave ${{ env.KURTOSIS_ENCLAVE_NAME }} .
            popd

      - name: Inspect Kurtosis enclave
        run : |
            kurtosis enclave inspect ${{ env.KURTOSIS_ENCLAVE_NAME }}

      - name: Run e2e tests
        run: |
          set -eo pipefail
          pushd agglayer-e2e || exit 1
          
          if [[ "${DEFAULT_L2_CLIENT}" == "cdk-op-geth" ]]; then
            export L2_RPC_URL=$(kurtosis port print "${KURTOSIS_ENCLAVE_NAME}" op-el-1-op-geth-op-node-001 rpc)
          elif [[ "${DEFAULT_L2_CLIENT}" == "cdk-erigon" ]]; then
            export L2_RPC_URL=$(kurtosis port print "${KURTOSIS_ENCLAVE_NAME}" cdk-erigon-rpc-001 rpc)
          else
            echo "invalid l2 client detected"
            exit 1
          fi
          
          export ENCLAVE_NAME="${{ env.KURTOSIS_ENCLAVE_NAME }}"
          export L2_PRIVATE_KEY="0x12d7de8621a77640c9241b2595ba78ce443d05e94090365ab3bb5e19df82c625"

          bats --filter-tags standard $(find tests -name '*.bats')
          popd
