name: Test e2e

on:
  push:
    branches:
      - "**"
  schedule:
    - cron: "0 2 * * *" # Run nightly at 2 AM UTC
  workflow_dispatch: {}

jobs:
  test-e2e:
    strategy:
      fail-fast: false
      matrix:
        include:
          # Kurtosis CDK.
          - package: kurtosis-cdk
            version: v0.3.2
            args_file: .github/tests/combinations/fork9-cdk-erigon-validium.yml
            filter_tags: light
          - package: kurtosis-cdk
            version: v0.3.2
            args_file: .github/tests/combinations/fork11-cdk-erigon-validium.yml
            filter_tags: zk-counters
          - package: kurtosis-cdk
            version: v0.3.2
            args_file: .github/tests/combinations/fork12-cdk-erigon-validium.yml
            filter_tags: batch-verification,gas-limit-overflow,access-list
          - package: kurtosis-cdk
            version: v0.3.2
            args_file: .github/tests/combinations/fork12-cdk-erigon-validium.yml
            filter_tags: batch-verification,gas-limit-overflow,access-list
            custom_agglayer_image: ghcr.io/agglayer/agglayer:0.3.0-rc.2

          # Kurtosis Polygon PoS.
          - package: kurtosis-polygon-pos
            version: v1.0.2
            args_file: .github/tests/heimdall-bor-multi-validators.yml
            filter_tags: pos
          - package: kurtosis-polygon-pos
            version: v1.0.2
            args_file: .github/tests/heimdall-v2-bor-multi-validators.yml
            filter_tags: pos

          # Optimism package.
          - package: optimism-package
            version: main
            args_file: network_params.yaml
            filter_tags: pessimistic
            env:
              L2_SENDER_PRIVATE_KEY: "0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80"

    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      L2_SENDER_PRIVATE_KEY: ${{ matrix.env.L2_SENDER_PRIVATE_KEY || '0x12d7de8621a77640c9241b2595ba78ce443d05e94090365ab3bb5e19df82c625' }}
      CUSTOM_AGGLAYER_IMAGE: ${{ matrix.custom_agglayer_image || '' }}

    steps:
      - uses: actions/checkout@v4

      - name: Install kurtosis
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/kurtosis-tech/ /" | sudo tee /etc/apt/sources.list.d/kurtosis.list
          sudo apt update
          sudo apt install kurtosis-cli=1.5.0
          kurtosis version
          kurtosis analytics disable

      - name: Install jq
        run: apt-get update && apt-get install --yes jq && jq --version

      - name: Install yq
        run: pip3 install yq && yq --version

      - name: Install shellcheck
        run: apt-get update && apt-get install --yes shellcheck && shellcheck --version

      - name: Install polycli
        run: |
          POLYCLI_VERSION="v0.1.74"
          tmp_dir=$(mktemp -d)
          curl -L "https://github.com/0xPolygon/polygon-cli/releases/download/${POLYCLI_VERSION}/polycli_${POLYCLI_VERSION}_linux_amd64.tar.gz" | tar -xz -C "$tmp_dir"
          mv "$tmp_dir"/* /usr/local/bin/polycli
          rm -rf "$tmp_dir"
          sudo chmod +x /usr/local/bin/polycli
          /usr/local/bin/polycli version

      - name: Install foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Install go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22
        env:
          GOARCH: amd64

      - name: Setup bats
        uses: bats-core/bats-action@2.0.0

      - name: Deploy devnet
        run: ./core/helpers/setup-kurtosis.sh "${{ matrix.package }}" "${{ matrix.version }}" "${{ matrix.args_file }}"

      - name: Export L2_RPC_URL and L2_SEQUENCER_RPC_URL for CI
        run: |
          echo "✅ Using Kurtosis RPC URL: $L2_RPC_URL"
          echo "✅ Using Kurtosis SEQUENCER RPC URL: $L2_SEQUENCER_RPC_URL"

          # Ensure the .env file exists
          touch tests/.env

          # Remove existing L2_RPC_URL entries
          sed -i '/^L2_RPC_URL=/d' tests/.env
          sed -i '/^L2_SEQUENCER_RPC_URL=/d' tests/.env

          # Append new values
          echo "" >> tests/.env
          echo "L2_RPC_URL=$L2_RPC_URL" >> tests/.env
          echo "L2_SEQUENCER_RPC_URL=$L2_SEQUENCER_RPC_URL" >> tests/.env

          # Debugging Output
          cat tests/.env

      - name: Build polygon-test-runner
        run: make install

      - name: Run e2e tests
        run: |
          L2_RPC_URL="$L2_RPC_URL" \
          L2_SEQUENCER_RPC_URL="$L2_SEQUENCER_RPC_URL" \
          L2_SENDER_PRIVATE_KEY="$L2_SENDER_PRIVATE_KEY" \
          polygon-test-runner --filter-tags "${{ matrix.filter_tags }}"

      - name: Dump enclave logs
        if: always()
        run: kurtosis dump ./dump

      - name: Generate archive name
        if: always()
        run: |
          file_name=$(basename "${{ matrix.args_file }}" ".yml")
          archive_name="dump_run_with_args_${{ matrix.package }}_${file_name}_${{ github.run_id }}_${{ strategy.job-index }}"
          echo "ARCHIVE_NAME=${archive_name}" >> "$GITHUB_ENV"

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.ARCHIVE_NAME }}
          path: ./dump
