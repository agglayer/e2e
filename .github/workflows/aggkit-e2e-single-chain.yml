name: Configurable E2E Execution
run-name: Run Kurtosis CDK E2E test by @${{ github.actor }}

on:
  workflow_call:
    inputs:
      kurtosis-cdk-ref:
        description: "The tag, branch, or commit of the kurtosis-cdk package that will be used"
        required: true
        type: string

      agglayer-e2e-ref:
        description: "The tag, branch, or commit of the agglayer/e2e repo that will used for running tests"
        required: true
        type: string

      kurtosis-cdk-args:
        description: "Input arguments for the Kurtosis CDK package."
        required: true
        type: string

      kurtosis-cdk-enclave-name:
        description: "The name to be used for the kurtosis enclave"
        required: true
        type: string

      docker-image-override:
        description: "The docker image in kurtosis that will replaced with a local tag (e.g. agglayer_image)"
        required: false
        type: string
        default: ""

      docker-tag:
        description: "A local docker tag to be used as the image for a particular service in kurtosis (e.g. agglayer:local)"
        required: false
        type: string
        default: "local"

      docker-artifact-name:
        description: "A name of a docker image to download (e.g. docker-image)"
        required: false
        type: string
        default: "aggkit"

      test-name:
        description: "Name of test"
        required: true
        type: string

      aggsender-find-imported-bridge-artifact:
        description: "Path for aggsender to find the imported bridge"
        required: false
        type: string
        default: ""

      event-name:
        description: "Event name to be used for the test"
        required: false
        type: string
        default: ""

jobs:
  test-single-e2e:
    name: Single chain E2E test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout agglayer-e2e
        uses: actions/checkout@v4
        with:
          repository: agglayer/e2e
          ref: ${{ inputs.agglayer-e2e-ref }}
          path: agglayer-e2e

      - name: Checkout kurtosis-cdk
        uses: actions/checkout@v4
        with:
          repository: 0xPolygon/kurtosis-cdk
          ref: ${{ inputs.kurtosis-cdk-ref }}
          path: kurtosis-cdk

      - name: Download binary
        if: inputs.aggsender-find-imported-bridge-artifact != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.aggsender-find-imported-bridge-artifact }}
          path: "/tmp"

      - name: Download artifact
        if: inputs.docker-artifact-name != ''
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.docker-artifact-name }}
          path: "/tmp"

      - name: Load image
        run: |
          if [[ -e /tmp/${{ inputs.docker-artifact-name }}.tar ]]; then
              docker load --input /tmp/${{ inputs.docker-artifact-name }}.tar
              docker images
          fi

      - name: Install Kurtosis CLI and Foundry
        uses: kurtosis-cdk/.github/actions/kurtosis-pre-run
        with:
          docker_username: ${{ secrets.DOCKER_USERNAME }}
          docker_token: ${{ secrets.DOCKER_TOKEN }}

      - name: Install jq
        run: sudo apt-get install jq -y

      - name: Install bats
        uses: bats-core/bats-action@3.0.0

      - name: Write args input to a file
        run: |
          docker_tag='${{ inputs.docker-tag }}'
          if [[ $docker_tag == "" ]]; then
              echo '${{ inputs.kurtosis-cdk-args }}' | tee /tmp/kurtosis-args.json
              exit
          fi
          echo '${{ inputs.kurtosis-cdk-args }}'
          echo '${{ inputs.kurtosis-cdk-args }}' | jq --arg img '${{ inputs.docker-image-override }}' --arg tag '${{ inputs.docker-tag }}' '.args[$img] = $tag' | tee /tmp/kurtosis-args.json

      - name: Startup the kurtosis-cdk package
        run: |
          pushd kurtosis-cdk || exit 1
          kurtosis run --enclave '${{ inputs.kurtosis-cdk-enclave-name }}' --args-file /tmp/kurtosis-args.json .
          popd

      - name: Run e2e tests
        run: |
          set -eo pipefail
          pushd agglayer-e2e || exit 1
          set -a
          source ./tests/.env
          set +a
          export BATS_LIB_PATH="$PWD/core/helpers/lib"
          export PROJECT_ROOT="$PWD"
          export ENCLAVE_NAME="${{ inputs.kurtosis-cdk-enclave-name }}"
          if [[ "${{ inputs.test-name }}" == "test-single-l2-network-fork12-global-index-pp-old-contracts" ]]; then
            chmod +x "/tmp/${{ inputs.aggsender-find-imported-bridge-artifact }}"
            export AGGSENDER_IMPORTED_BRIDGE_PATH="/tmp/${{ inputs.aggsender-find-imported-bridge-artifact }}"
            bats ./tests/aggkit/global-index-pp-old-contracts.bats \
                 || exit 1
          elif [[ $ENCLAVE_NAME == "op" ]]; then
            bats ./tests/aggkit/bridge-e2e.bats \
                 ./tests/aggkit/e2e-pp.bats \
                 ./tests/aggkit/bridge-sovereign-chain-e2e.bats \
                 || exit 1

            if [[ "${{ inputs.event-name }}" == "schedule" ]]; then
              bats ./tests/aggkit/bridge-e2e-nightly.bats \
                   ./tests/aggkit/internal-claims.bats \
                   ./tests/aggkit/claim-reetrancy.bats \
                   || exit 1
            fi
          else
            bats ./tests/aggkit/bridge-e2e.bats \
                 ./tests/aggkit/e2e-pp.bats \
                 ./tests/aggkit/bridge-e2e-custom-gas.bats \
                 || exit 1

            if [[ "${{ inputs.event-name }}" == "schedule" ]]; then
              bats ./tests/aggkit/bridge-e2e-nightly.bats \
                   ./tests/aggkit/internal-claims.bats \
                   ./tests/aggkit/claim-reetrancy.bats \
                   || exit 1
            fi
          fi
          popd

      - name: Dump enclave logs
        if: ${{ failure() }}
        run: kurtosis dump ./dump

      - name: Generate archive name
        if: ${{ failure() }}
        run: |
          archive_name="dump_run_with_args_${{inputs.test-name}}_${{ github.run_id }}"
          echo "ARCHIVE_NAME=${archive_name}" >> "$GITHUB_ENV"
          echo "Generated archive name: ${archive_name}"

      - name: Upload logs
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ inputs.test-name }}
          path: ./dump

      - name: Clean up kurtosis-cdk enclave
        if: ${{ always() }}
        run: |
          kurtosis enclave stop '${{ inputs.kurtosis-cdk-enclave-name }}'
          kurtosis clean

      - name: Record test run in Datadog
        if: always()
        continue-on-error: true
        uses: agglayer/gha-record-e2e-test-run@v1
        with:
          enable_ai_analysis: "true"
          host: "github-actions-runners"
          status: ${{ job.status }}
          ref_kurtosis: "${{ inputs.kurtosis-cdk-ref }}"
          ref_e2e: "${{ inputs.agglayer-e2e-ref }}"
        env:
          DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
