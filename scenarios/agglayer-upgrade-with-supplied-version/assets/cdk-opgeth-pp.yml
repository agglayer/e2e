# # This args-file deploys the OP Succinct chain.
# deployment_stages:
#   # deploy_optimism_rollup: true
#   deploy_op_succinct: true
#   deploy_agglayer: true
# args:
#   sp1_prover_key: "bcdf20249abf0ed6d944c0288fad489e33f66b3960d9e6229c1cd214ed3bbe31" # XXX: Replace with an active key
#   # Valid values are: "network-prover", "mock-prover"
#   agglayer_prover_primary_prover: "network-prover"
#   # Valid values are: "network-prover", "mock-prover"
#   aggkit_prover_primary_prover: "network-prover"
#   consensus_contract_type: pessimistic
#   # aggkit_prover_image: "ghcr.io/agglayer/aggkit-prover:feat-rust-proposer"
#   # false = network
#   # Using the network provers will use the real SP1 verifier contract which is also deployed together in the Kurtosis devnet.
#   # A mock verifier is used otherwise.
#   op_succinct_mock: false
#   # Enable real (non-mock) verifier on contracts
#   zkevm_use_real_verifier: true
#   # Enable the integration with the Agglayer
#   op_succinct_agglayer: true
#   # Proof type. Must match the verifier gateway contract type. Options: "plonk", "groth16", "compressed", "core"
#   op_succinct_agg_proof_mode: "compressed"
#   # The minimum interval in L2 blocks at which checkpoints must be submitted. An aggregation proof can be posted for any range larger than this interval.
#   op_succinct_submission_interval: "1"
#   # The maximum number of concurrent proof requests to send to the `op-succinct-server`
#   op_succinct_max_concurrent_proof_requests: "1"
#   # The maximum number of concurrent witness generation processes to run on the `op-succinct-server`
#   op_succinct_max_concurrent_witness_gen: "1"
#   # Must match network_id field in network_params.network_id
#   # zkevm_rollup_chain_id: 2151908
#   # The number following the "-" should be identical to network_params.name
#   deployment_suffix: "-001"
#   zkevm_rollup_id: 1
#   # Size of the range proof.
#   op_succinct_range_proof_interval: "1800"
#   # OP Networks rely on L1 blocks to have finalization on L2. This means if the L1 blocktime is very fast, OP Succinct proof requests will have to bundle many L1 blocks into a single proof.
#   # This will significantly increase cycles even if the L2 network is empty. Instead of having 2s, for OP Succinct deployments, we recommend 12s.
#   # Note this will noticeably increase the deployment time because of the increased L1 finality.
#   l1_seconds_per_slot: 12

# optimism_package:
#   observability:
#     enabled: true

deployment_stages:
  deploy_l1: true
  deploy_agglayer: true
  deploy_optimism_rollup: true

args:
  l1_custom_genesis: true
  zkevm_rollup_chain_id: 2151909
  deployment_suffix: "-001"
  zkevm_rollup_id: 2
  consensus_contract_type: pessimistic
  # OP Stack EL RPC URL. Will be dynamically updated by args_sanity_check().
  # op_el_rpc_url: "http://op-el-1-op-geth-op-node-002:8545"
  # OP Stack CL Node URL. Will be dynamically updated by args_sanity_check().
  # op_cl_rpc_url: "http://op-cl-1-op-node-op-geth-002:8547"
  # Arbitrary key for the SP1 prover. Replace with a valid SPN key if you want to use the network provers.
  # cast wallet private-key --mnemonic "giant issue aisle success illegal bike spike question tent bar rely arctic volcano long crawl hungry vocal artwork sniff fantasy very lucky have athlete"
  # NOTE: for sp1 early version the network prover key not support '0x' prefix
  sp1_prover_key: "bcdf20249abf0ed6d944c0288fad489e33f66b3960d9e6229c1cd214ed3bbe31"
  # Valid values are: "network-prover", "mock-prover"
  agglayer_prover_primary_prover: "mock-prover"
  # Valid values are: "network-prover", "mock-prover"
  aggkit_prover_primary_prover: "mock-prover"

  # zkevm_l2_aggoracle_address: "0x8F43d25C7aA610A762AC59670b5FFf010a21DB5F"
  # zkevm_l2_aggoracle_private_key: "0x781a3735faba4bf257f3d97b641f66e29a3a89d74178eaeac2e44614b2e066a5"
  # zkevm_l2_sovereignadmin_address: "0x4C9fC4485ca332eAA1B0f621E6e7B5A1c336d3eE"
  # zkevm_l2_sovereignadmin_private_key: "0x719f7a806a2d34f22ed95b460e4fd2d983837e8f63980125adc809eab60151c1"

optimism_package:
  # We need this for pre-deployed allocs https://github.com/ethpandaops/optimism-package/compare/main...xavier-romero:optimism-package:main#diff-c479a5b20e37b19a976045939f01e8a6deb6a062a147e08b81049469d512d00cR235
  #         "github.com/ethpandaops/optimism-package/main.star@884f4eb813884c4c8e5deead6ca4e0c54b85da90",
  source: "github.com/xavier-romero/optimism-package/main.star@d09d841bd5528f4b29144cfc7ecba88a162427ce"
  predeployed_contracts: true
  chains:
    - participants:
        - el_type: op-geth
          el_image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-geth@sha256:8cad527a982e929f80fca539e612c59ccb503fc076b86ce1f4ebeefb112dee03"
          cl_type: op-node
          cl_image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node@sha256:207943c6ca92a203e5c2f7908769023c76d2304060c8d8c4cfbd469b7fbaaf0d"
          count: 1
      batcher_params:
        image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher@sha256:a017bf0a1dbe88e770eb6979354a148534b36e58ea7bc2fd7ae01f5e90eb9ed3"
      proposer_params:
        image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer@sha256:1c6e0c0ac79b561652af1bd5df30f0fcca1490c3989ea0a15e7e18d823e96825"
      network_params:
        name: "001"
        network_id: "2151909"
        seconds_per_slot: 1
  op_contract_deployer_params:
    # image: "us-docker.pkg.dev/oplabs-tools-artifacts/images/op-deployer:v0.0.12"
    image: "xavierromero/op-deployer:20250314"
    l1_artifacts_locator: "https://storage.googleapis.com/oplabs-contract-artifacts/artifacts-v1-fffcbb0ebf7f83311791534a41e65ef90df47797f9ca8f86941452f597f7128c.tar.gz"
    l2_artifacts_locator: "https://storage.googleapis.com/oplabs-contract-artifacts/artifacts-v1-fffcbb0ebf7f83311791534a41e65ef90df47797f9ca8f86941452f597f7128c.tar.gz"
  observability:
    enabled: true
