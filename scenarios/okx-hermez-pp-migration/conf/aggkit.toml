# ==============================================================================
#     _    ____  ____ _  _____ _____
#    / \  / ___|/ ___| |/ /_ _|_   _|
#   / _ \| |  _| |  _| ' / | |  | |
#  / ___ \ |_| | |_| | . \ | |  | |
# /_/   \_\____|\____|_|\_\___| |_|
#
# This is a reference config file used by the Kurtosis CDK Testing
# setup. The values here should work, but are necessarily meant for
# production environments. DYOR
# The below configs are the default mandatory parameters to be used.

PathRWData = "/tmp/"
L1URL=""

L2URL=""

# Check if agglayer grpc or readrpc should be used for AggLayerURL
AggLayerURL=""

# Check if "op" mode should be used for L2RPC
# L2RPC = "{Mode = \"op\", URL = \"http://op-el-1-op-geth-op-node-001:8545\", OpNodeURL = \"http://op-cl-1-op-node-op-geth-001:8547\"}"

ForkId = 12
ContractVersions = "banana"
IsValidiumMode = false
NetworkID = 1

# Does this make sense? I've sent this to be the temporyary sequencer key
L2Coinbase =  ""
SequencerPrivateKeyPath = ""
SequencerPrivateKeyPassword  = ""

AggregatorPrivateKeyPath = ""
AggregatorPrivateKeyPassword  = ""
SenderProofToL1Addr = ""
polygonBridgeAddr = "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe"

RPCURL = ""


WitnessURL = ""

# These values can be overriden directly from genesis.json
rollupCreationBlockNumber = "19545462"
rollupManagerCreationBlockNumber = "1686721"
genesisBlockNumber = "1686721"
# ------------------------------------------------------------------------------

# ==============================================================================
#  _     _  ____ ___  _   _ _____ ___ ____
# | |   / |/ ___/ _ \| \ | |  ___|_ _/ ___|
# | |   | | |  | | | |  \| | |_   | | |  _
# | |___| | |__| |_| | |\  |  _|  | | |_| |
# |_____|_|\____\___/|_| \_|_|   |___\____|
#
# ------------------------------------------------------------------------------
[L1Config]
# ------------------------------------------------------------------------------
# L1 chain id
# ------------------------------------------------------------------------------
chainId = "1"

# ------------------------------------------------------------------------------
# Address of the zkevm global exit root contract on L1
# ------------------------------------------------------------------------------
polygonZkEVMGlobalExitRootAddress = ""

# ------------------------------------------------------------------------------
# Address of the rollup manager contract on L1
# ------------------------------------------------------------------------------
polygonRollupManagerAddress = "0x5132a183e9f3cb7c848b0aac5ae0c4f0491b7ab2"

# ------------------------------------------------------------------------------
# Address of the pol token address on L1
# ------------------------------------------------------------------------------
polTokenAddress = "0x455e53CBB86018Ac2B8092FdCd39d8444aFFC3F6"

# ------------------------------------------------------------------------------
# Address of the sovereign rollup contract on L2
# ------------------------------------------------------------------------------
polygonZkEVMAddress = "0x2B0ee28D4D51bC9aDde5E58E295873F61F4a0507"

# ==============================================================================
#  _     ____   ____ ___  _   _ _____ ___ ____
# | |   |___ \ / ___/ _ \| \ | |  ___|_ _/ ___|
# | |     __) | |  | | | |  \| | |_   | | |  _
# | |___ / __/| |__| |_| | |\  |  _|  | | |_| |
# |_____|_____|\____\___/|_| \_|_|   |___\____|
#
# ------------------------------------------------------------------------------
[L2Config]
# ------------------------------------------------------------------------------
# Address of the sovereign global exit root proxy contract on L2
# ------------------------------------------------------------------------------
GlobalExitRootAddr = ""

# ==============================================================================
#  _     ___   ____
# | |   / _ \ / ___|
# | |  | | | | |  _
# | |__| |_| | |_| |
# |_____\___/ \____|
#
# ------------------------------------------------------------------------------
[Log]
# ------------------------------------------------------------------------------
# Environment generally dictates the format of the logs and the
# sampling rate. We often default to production even for development
# because of the JSON encoding.
#
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/config.go#L120
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/config.go#L161
# ------------------------------------------------------------------------------
Environment = "development" # "production" or "development"

# ------------------------------------------------------------------------------
# Level determines the log level that will be written to the
# log. Generally we'll switch to debug if we want to troubleshoot
# something specifically otherwise we leave it at info
# ------------------------------------------------------------------------------
Level = "info"

# ------------------------------------------------------------------------------
# Outputs define the output paths for writing logs. The default is to
# write to stderr, but other output paths should be supported
#
# https://github.com/uber-go/zap/blob/a55bdc32f526699c3b4cc51a2cc97e944d02fbbf/writer.go#L32-L50
# ------------------------------------------------------------------------------
Outputs = ["stderr"]

# ==============================================================================
# ____  ____   ____
# |  _ \|  _ \ / ___|
# | |_) | |_) | |
# |  _ <|  __/| |___
# |_| \_\_|    \____|
#
# ------------------------------------------------------------------------------
[RPC]
# ------------------------------------------------------------------------------
# Port will configure the port that the data streamer server will
# listen on
# ------------------------------------------------------------------------------
Port = 5576


# ==============================================================================
#     _    ____  ____ ____  _____ _   _ ____  _____ ____
#    / \  / ___|/ ___/ ___|| ____| \ | |  _ \| ____|  _ \
#   / _ \| |  _| |  _\___ \|  _| |  \| | | | |  _| | |_) |
#  / ___ \ |_| | |_| |___) | |___| |\  | |_| | |___|  _ <
# /_/   \_\____|\____|____/|_____|_| \_|____/|_____|_| \_\
#
# ------------------------------------------------------------------------------
[AggSender]
# ------------------------------------------------------------------------------
# StoragePath is the path of the sqlite db for the AggSender to store the data
# ------------------------------------------------------------------------------
# StoragePath = "/tmp"

# ------------------------------------------------------------------------------
# AggsenderPrivateKey is the private key which is used to sign certificates
# ------------------------------------------------------------------------------
AggsenderPrivateKey = {Path = "/etc/aggkit/sequencer.keystore", Password = ""}
# AggchainProofURL="aggkit-prover-001:4446"
CheckStatusCertificateInterval = "1s"
Mode="PessimisticProof"
# UseAgglayerTLS = true
UseAgglayerTLS = false

# ------------------------------------------------------------------------------
# MaxCertSize is the maximum size of the certificate
# i.e (the emitted certificate cannot be bigger that this size)
# 0 is infinite
# ------------------------------------------------------------------------------
MaxCertSize = 0

# Pick based on the the matching block from the L1 hard fork time
UpgradeEndBlock = 17428134

[AggSender.MaxSubmitCertificateRate]
NumRequests = 20
Interval = "1m"

# ------------------------------------------------------------------------------
# URLRPCL2 is the URL of the L2 RPC node
# ------------------------------------------------------------------------------
# URLRPCL2 = "http://op-el-1-op-geth-op-node-001:8545"

# ------------------------------------------------------------------------------
# BlockFinality indicates which finality follows AggLayer accepted values are:
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "LatestBlock"
# ------------------------------------------------------------------------------
BlockFinality = "LatestBlock"

# ------------------------------------------------------------------------------
# EpochNotificationPercentage indicates the percentage of the epoch
# the AggSender should send the certificate
# 0 -> Begin
# 50 -> Middle
# ------------------------------------------------------------------------------
# EpochNotificationPercentage = 50

# ------------------------------------------------------------------------------
# AggSender will save the certificates to a file in this path
# ------------------------------------------------------------------------------
SaveCertificatesToFilesPath = "/tmp"

# ------------------------------------------------------------------------------
# MaxRetriesStoreCertificate is the maximum number of retries to store a certificate
# 0 is infinite
# ------------------------------------------------------------------------------
# MaxRetriesStoreCertificate = 3

# ------------------------------------------------------------------------------
# DelayBeetweenRetries is the delay between retries
# Duration expressed in units: [ns, us, ms, s, m, h, d]"
# ------------------------------------------------------------------------------
# DelayBeetweenRetries = 5s

# ------------------------------------------------------------------------------
# KeepCertificatesHistory is a flag to keep the certificates history on storage
# ------------------------------------------------------------------------------
KeepCertificatesHistory = true



# ------------------------------------------------------------------------------
# BridgeMetadataAsHash is a flag to import the bridge metadata as hash
# ------------------------------------------------------------------------------
# BridgeMetadataAsHash = false

# ------------------------------------------------------------------------------
# DryRun is a flag to enable the dry run mode
# in this mode the AggSender will not send the certificates to Agglayer
# ------------------------------------------------------------------------------
# DryRun = false

# ------------------------------------------------------------------------------
# EnableRPC is a flag to enable the RPC for aggsender
# ------------------------------------------------------------------------------
# EnableRPC = false

# ==============================================================================
#     _    ____  ____  ___  ____      _    ____ _     _____
#    / \  / ___|/ ___|/ _ \|  _ \    / \  / ___| |   | ____|
#   / _ \| |  _| |  _| | | | |_) |  / _ \| |   | |   |  _|
#  / ___ \ |_| | |_| | |_| |  _ <  / ___ \ |___| |___| |___
# /_/   \_\____|\____|\___/|_| \_\/_/   \_\____|_____|_____|
#
# ------------------------------------------------------------------------------
[AggOracle]
# ------------------------------------------------------------------------------
# TargetChainType currently only supports "EVM"
# ------------------------------------------------------------------------------
# TargetChainType = "EVM"

# ------------------------------------------------------------------------------
# URLRPCL1 is the URL of the L1 RPC node
# ------------------------------------------------------------------------------
# URLRPCL1 = "http://el-1-geth-lighthouse:8545"

# ------------------------------------------------------------------------------
# BlockFinality indicates which finality follows AggLayer accepted values are:
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "FinalizedBlock"
# ------------------------------------------------------------------------------
BlockFinality = "FinalizedBlock"

# ------------------------------------------------------------------------------
# Duration expressed in units: [ns, us, ms, s, m, h, d]"
# ------------------------------------------------------------------------------
WaitPeriodNextGER = "10s"

[AggOracle.EVMSender]
# ------------------------------------------------------------------------------
# Address of the sovereign global exit root proxy contract on L2
# ------------------------------------------------------------------------------
GlobalExitRootL2 = ""

# ------------------------------------------------------------------------------
# URLRPCL2 is the URL of the L2 RPC node
# ------------------------------------------------------------------------------
# URLRPCL2 = "http://op-el-1-op-geth-op-node-001:8545"

# ------------------------------------------------------------------------------
# GasOffset is the gas to add on the estimated gas when sending the claim txs
# ------------------------------------------------------------------------------
# GasOffset = 0

# ------------------------------------------------------------------------------
# Duration expressed in units: [ns, us, ms, s, m, h, d]"
# ------------------------------------------------------------------------------
WaitPeriodMonitorTx = "10s"

[AggOracle.EVMSender.EthTxManager]
# ------------------------------------------------------------------------------
# PrivateKeys defines all the key store files that are going
# to be read in order to provide the private keys to sign the L1 txs
# ------------------------------------------------------------------------------
PrivateKeys = [{Path = "/etc/aggkit/aggoracle.keystore", Password = ""}]

# ------------------------------------------------------------------------------
# FrequencyToMonitorTxs frequency of the resending failed txs
# Duration expressed in units: [ns, us, ms, s, m, h, d]"
# ------------------------------------------------------------------------------
# FrequencyToMonitorTxs = "1s"

# ------------------------------------------------------------------------------
# WaitTxToBeMined time to wait after transaction was sent to the ethereum
# ------------------------------------------------------------------------------
# WaitTxToBeMined = "2s"

# ------------------------------------------------------------------------------
# GetReceiptMaxTime is the max time to wait to get the receipt of the mined transaction
# ------------------------------------------------------------------------------
# GetReceiptMaxTime = "250ms"

# ------------------------------------------------------------------------------
# GetReceiptWaitInterval is the time to sleep before trying to get the receipt of the mined transaction
# ------------------------------------------------------------------------------
# GetReceiptWaitInterval = "1s"

# ------------------------------------------------------------------------------
# ForcedGas is the amount of gas to be forced in case of gas estimation error
# ------------------------------------------------------------------------------
# ForcedGas = 0

# ------------------------------------------------------------------------------
# GasPriceMarginFactor is used to multiply the suggested gas price provided by the network
# in order to allow a different gas price to be set for all the transactions and making it
# easier to have the txs prioritized in the pool, default value is 1.
#
# example:
# suggested gas price: 100
# GasPriceMarginFactor: 1
# gas price = 100
#
# suggested gas price: 100
# GasPriceMarginFactor: 1.1
# gas price = 110
# ------------------------------------------------------------------------------
# GasPriceMarginFactor = 1

# ------------------------------------------------------------------------------
# MaxGasPriceLimit helps avoiding transactions to be sent over an specified
# gas price amount, default value is 0, which means no limit.
# If the gas price provided by the network and adjusted by the GasPriceMarginFactor
# is greater than this configuration, transaction will have its gas price set to
# the value configured in this config as the limit.
#
# example:
# suggested gas price: 100
# gas price margin factor: 20%
# max gas price limit: 150
# tx gas price = 120
#
# suggested gas price: 100
# gas price margin factor: 20%
# max gas price limit: 110
# tx gas price = 110
# ------------------------------------------------------------------------------
# MaxGasPriceLimit = 0

# ------------------------------------------------------------------------------
# StoragePath is the path of the internal storage
# ------------------------------------------------------------------------------
# StoragePath = "/tmp/ethtxmanager-aggoracle.sqlite"

# ------------------------------------------------------------------------------
# ReadPendingL1Txs is a flag to enable the reading of pending L1 txs
# It can only be enabled if DBPath is empty
# ------------------------------------------------------------------------------
# ReadPendingL1Txs = false

# ------------------------------------------------------------------------------
# SafeStatusL1NumberOfBlocks overwrites the number of blocks to consider a tx as safe
# overwriting the default value provided by the network
# 0 means that the default value will be used
# ------------------------------------------------------------------------------
# SafeStatusL1NumberOfBlocks = 5

# ------------------------------------------------------------------------------
# FinalizedStatusL1NumberOfBlocks overwrites the number of blocks to
# consider a tx as finalized overwriting the default value provided by the network
# 0 means that the default value will be used
# ------------------------------------------------------------------------------
# FinalizedStatusL1NumberOfBlocks = 10

[AggOracle.EVMSender.EthTxManager.Etherman]
# ------------------------------------------------------------------------------
# Needs to be set to be the sovereign L2 chain id
# ------------------------------------------------------------------------------
L1ChainID = "2151908"

# ==============================================================================
#  ____  _____  _____ _____   _____ ______ _     __  _______     ___   _  _____ 
# |  _ \|  __ \|_   _|  __ \ / ____|  ____| |   /_ |/ ____\ \   / / \ | |/ ____|
# | |_) | |__) | | | | |  | | |  __| |__  | |    | | (___  \ \_/ /|  \| | |     
# |  _ <|  _  /  | | | |  | | | |_ |  __| | |    | |\___ \  \   / | . ` | |     
# | |_) | | \ \ _| |_| |__| | |__| | |____| |____| |____) |  | |  | |\  | |____ 
# |____/|_|  \_\_____|_____/ \_____|______|______|_|_____/   |_|  |_| \_|\_____|                                                                               
# ==============================================================================
[BridgeL1Sync]
# ------------------------------------------------------------------------------
# BlockFinality indicates the status of the blocks that will be queried to sync
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "LatestBlock"
# ------------------------------------------------------------------------------
BlockFinality = "LatestBlock"                                                           

# ==============================================================================
#  ____  ____  ___ ____   ____ _____ _     ____  ______   ___   _  ____
# | __ )|  _ \|_ _|  _ \ / ___| ____| |   |___ \/ ___\ \ / / \ | |/ ___|
# |  _ \| |_) || || | | | |  _|  _| | |     __) \___ \\ V /|  \| | |
# | |_) |  _ < | || |_| | |_| | |___| |___ / __/ ___) || | | |\  | |___
# |____/|_| \_\___|____/ \____|_____|_____|_____|____/ |_| |_| \_|\____|
# ------------------------------------------------------------------------------
[BridgeL2Sync]
# ------------------------------------------------------------------------------
# BridgeAddr is the address of the sovereign bridge contract on L2
# ------------------------------------------------------------------------------
BridgeAddr = "0x2a3DD3EB832aF982ec71669E178424b10Dca2EDe"

# ------------------------------------------------------------------------------
# DBPath path of the sqlite db
# ------------------------------------------------------------------------------
# DBPath = "/tmp/bridgel2sync.sqlite"

# ------------------------------------------------------------------------------
# BlockFinality indicates the status of the blocks that will be queried to sync
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "LatestBlock"
# ------------------------------------------------------------------------------
BlockFinality = "FinalizedBlock"

# ------------------------------------------------------------------------------
# First block that will be queried when starting the synchronization from scratch.
# It should be a number equal or bellow the creation of the bridge contract
# ------------------------------------------------------------------------------
# InitialBlockNum = 0

# ------------------------------------------------------------------------------
# The amount of blocks that will be queried to the client on each request
# ------------------------------------------------------------------------------
SyncBlockChunkSize = 1000

# ------------------------------------------------------------------------------
# The time that will be waited when an unexpected error happens before retry
# ------------------------------------------------------------------------------
# RetryAfterErrorPeriod = "1s"

# ------------------------------------------------------------------------------
# The maximum number of consecutive attempts that will happen before panic.
# Any number smaller than zero will be considered as unlimited retries
# ------------------------------------------------------------------------------
# MaxRetryAttemptsAfterError = -1

# ------------------------------------------------------------------------------
# Time that will be waited when the synchronizer has reached the latest block
# ------------------------------------------------------------------------------
# WaitForNewBlocksPeriod = "3s"

# ==============================================================================
#  _     _ ___ _   _ _____ ___ _____ ____  _____ _____ ______   ___   _  ____
# | |   / |_ _| \ | |  ___/ _ \_   _|  _ \| ____| ____/ ___\ \ / / \ | |/ ___|
# | |   | || ||  \| | |_ | | | || | | |_) |  _| |  _| \___ \\ V /|  \| | |
# | |___| || || |\  |  _|| |_| || | |  _ <| |___| |___ ___) || | | |\  | |___
# |_____|_|___|_| \_|_|   \___/ |_| |_| \_\_____|_____|____/ |_| |_| \_|\____|
#
# ------------------------------------------------------------------------------
[L1InfoTreeSync]
# ------------------------------------------------------------------------------
# The initial block number from which to start syncing.
# Default: 0
# ------------------------------------------------------------------------------
InitialBlock = "36"

# ------------------------------------------------------------------------------
# BlockFinality indicates which finality follows AggLayer accepted values are:
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "LatestBlock"
# ------------------------------------------------------------------------------
BlockFinality = "LatestBlock"

# ==============================================================================
#  _                _____ _______ _____ ______ _____   _______     ___   _  _____ 
# | |        /\    / ____|__   __/ ____|  ____|  __ \ / ____\ \   / / \ | |/ ____|
# | |       /  \  | (___    | | | |  __| |__  | |__) | (___  \ \_/ /|  \| | |     
# | |      / /\ \  \___ \   | | | | |_ |  __| |  _  / \___ \  \   / | . ` | |     
# | |____ / ____ \ ____) |  | | | |__| | |____| | \ \ ____) |  | |  | |\  | |____ 
# |______/_/    \_\_____/   |_|  \_____|______|_|  \_\_____/   |_|  |_| \_|\_____|
# ==============================================================================
[LastGERSync]
# ------------------------------------------------------------------------------
# BlockFinality indicates which finality follows AggLayer accepted values are:
# LatestBlock, SafeBlock, PendingBlock, FinalizedBlock, EarliestBlock
# Default value is "LatestBlock"
# ------------------------------------------------------------------------------
BlockFinality = "LatestBlock"                                                                                 
                                                                                 
# ==============================================================================
#   ____ _        _    ___ __  __ ____  ____   ___  _   _ ____   ___  ____
#  / ___| |      / \  |_ _|  \/  / ___||  _ \ / _ \| \ | / ___| / _ \|  _ \
# | |   | |     / _ \  | || |\/| \___ \| |_) | | | |  \| \___ \| | | | |_) |
# | |___| |___ / ___ \ | || |  | |___) |  __/| |_| | |\  |___) | |_| |  _ <
#  \____|_____/_/   \_\___|_|  |_|____/|_|    \___/|_| \_|____/ \___/|_| \_\
# ------------------------------------------------------------------------------
[ClaimSponsor]
# ------------------------------------------------------------------------------
# Path of the DB
# ------------------------------------------------------------------------------
DBPath = "/tmp/claimsponsor.sqlite"

# ------------------------------------------------------------------------------
# Enabled indicates if the sponsor should be run or not
# ------------------------------------------------------------------------------
Enabled = false

# ------------------------------------------------------------------------------
# SenderAddr is the address that will be used to send the claim txs
# ------------------------------------------------------------------------------
SenderAddr = ""

# ------------------------------------------------------------------------------
# BridgeAddrL2 is the address of the bridge smart contract on L2
# ------------------------------------------------------------------------------
BridgeAddrL2 = ""

[ClaimSponsor.EthTxManager]
# ------------------------------------------------------------------------------
# PrivateKeys defines all the key store files that are going
# to be read in order to provide the private keys to sign the L1 txs
# ------------------------------------------------------------------------------
PrivateKeys = [
    {Path = "/etc/aggkit/claimtxmanager.keystore", Password = ""},
]

# ------------------------------------------------------------------------------
# StoragePath is the path of the internal storage
# ------------------------------------------------------------------------------
StoragePath = "/tmp/ethtxmanager-claimsponsor.sqlite"

[ClaimSponsor.EthTxManager.Etherman]
# ------------------------------------------------------------------------------
# URL is the URL of the Ethereum node for L2
# ------------------------------------------------------------------------------
URL = "http://op-el-1-op-geth-op-node-001:8545"

# ------------------------------------------------------------------------------
# Needs to be set to be the sovereign L2 chain id
# If set to 0, the chain ID will be fetched from the RPC endpoint
# ------------------------------------------------------------------------------
L1ChainID = "2151908"


# ==============================================================================
#  ____             __ _ _ _             
# |  _ \ _ __ ___  / _(_) (_)_ __   __ _ 
# | |_) | '__/ _ \| |_| | | | '_ \ / _` |
# |  __/| | | (_) |  _| | | | | | | (_| |
# |_|   |_|  \___/|_| |_|_|_|_| |_|\__, |
#                                  |___/ 
# ------------------------------------------------------------------------------
[Profiling]
# ------------------------------------------------------------------------------
# ProfilingHost is the address to bind the profiling server
# Default: "localhost"
# ------------------------------------------------------------------------------
ProfilingHost = "0.0.0.0"

# ------------------------------------------------------------------------------
# ProfilingPort is the port to bind the profiling server
# Default: 6060
# ------------------------------------------------------------------------------
ProfilingPort = 6060

# ------------------------------------------------------------------------------
# ProfilingEnabled is the flag to enable/disable the profiling server
# Default: false
# ------------------------------------------------------------------------------